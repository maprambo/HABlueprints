blueprint:
  name: Ikea Styrbar Dimmer and Actions
  description: Control your lights with the IKEA STYRBAR remote. You can also set
    actions for the left and right button as well as for the up/dim up button.
  domain: automation
  input:
    remote:
      name: Remote
      description: IKEA Styrbar remote to use
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          entity:
            domain: sensor
    target_light:
      name: Lights
      description: The lights you want to control with the remote
      selector:
        target:
          entity:
            domain: light
    main_light:
      name: Main Light
      description: Main light entity used to check whether light is on
      selector:
        entity:
          domain: light
    action_list:
      name: Action select
      description: "Input select helper with actions (entity ids) to skip through, scripts and scenes are allowed (e.g. 'script.my_script' and 'scene.my_scene')"
      selector:
        entity:
          domain: input_select
    button_up:
      name: On button
      description: Action to run on up button press short
      default: []
      selector:
        action: {}
    force_default:
      name: Force Default Action
      description: Force the above set action when turning on?
      default: false
      selector:
        boolean: {}
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'on'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'off'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'move'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'stop'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'move_with_on_off'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'stop_with_on_off'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'release'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'hold'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'press'
action:
- variables:
    command: '{{ trigger.event.data.command }}'
    dataargs: '{{ trigger.event.data.args }}'
    main_light: !input main_light
    force_default: !input force_default
    action_list: !input action_list
- choose:
# Licht anschalten
  - conditions: '{{ command == "on" }}'
    sequence:
    - choose:
      - conditions:
        - condition: state
          entity_id: !input 'main_light'
          state: 'on'
        sequence:
        - delay:
            milliseconds: 1000
    - choose:
      - conditions:
        - condition: or
          conditions:
          - condition: state
            entity_id: !input 'main_light'
            state: 'on'
          - '{{ force_default }}'
        sequence: !input 'button_up'
      default:
      - service: light.turn_on
        target: !input 'target_light'
        data:
          transition: 1
# Licht ausschalten
  - conditions: '{{ command == "off" }}'
    sequence:
    - service: light.turn_off
      target: !input 'target_light'
# Herunterdimmen
  - conditions: '{{ command == "move" }}'
    sequence:
    - repeat:
        until: '{{ command == "stop_with_on_off" }}'
        sequence:
        - service: light.turn_on
          target: !input 'target_light'
          data:
            transition: 1
            brightness_step_pct: -10
        - delay: '1'
# Hochdimmen
  - conditions: '{{ command == "move_with_on_off" }}'
    sequence:
    - repeat:
        until: '{{ command == "stop_with_on_off" }}'
        sequence:
        - service: light.turn_on
          target: !input 'target_light'
          data:
            transition: 1
            brightness_step_pct: +10
        - delay: '1'
# Kurz nach links
  - conditions:
    - '{{ command == "press" }}'
    - '{{ dataargs[0] == 257 }}'
    sequence:
    - choose:
      - conditions:
        - "{{ states(action_list).split('.')[0] == 'automation'}}"
        sequence:
          - service: automation.turn_off
            target:
              entity_id: "{{ states(action_list) }}"
    - service: input_select.select_previous
      target:
        entity_id: !input action_list
    - choose:
      - conditions:
        - "{{ states(action_list).split('.')[0] == 'script'}}"
        sequence:
          - service: "{{ states(action_list) }}"
      - conditions:
        - "{{ states(action_list).split('.')[0] == 'scene'}}"
        sequence:
          - service: scene.turn_on
            target:
              entity_id: "{{ states(action_list) }}"
      - conditions:
        - "{{ states(action_list).split('.')[0] == 'automation'}}"
        sequence:
          - service: automation.turn_on
            target:
              entity_id: "{{ states(action_list) }}"
# Kurz nach rechts
  - conditions:
    - '{{ command == "press" }}'
    - '{{ dataargs[0] == 256 }}'
    sequence:
    - service: input_select.select_next
      target:
        entity_id: !input action_list
    - choose:
      - conditions:
        - "{{ states(action_list).split('.')[0] == 'script'}}"
        sequence:
          - service: "{{ states(action_list) }}"
        - "{{ states(action_list).split('.')[0] == 'scene'}}"
        sequence:
          - service: scene.turn_on
            target:
              entity_id: "{{ states(action_list) }}"
# Lange nach links
  - conditions:
    - '{{ command == "hold" }}'
    - '{{ dataargs[0] == 3329 }}'
    sequence:
    - repeat:
        until: '{{ command == "release" }}'
        sequence:
          - choose:
            - conditions:
# - Weißton-Modus: kälter
              - condition: state
                entity_id: !input main_light
                attribute: color_mode
                value: color_temp
              - " {{ state_attr(main_light, 'color_temp') - 10 >= state_attr(main_light, 'min_mireds') }} "
              sequence:
              - service: light.turn_on
                target: !input target_light
                data:
                  color_temp: " {{ (state_attr(main_light, 'color_temp') - 10) | int }} "
                  transition: 1
# - HS-Modus: langwelliger
            - conditions:
              - condition: state
                entity_id: !input main_light
                attribute: color_mode
                value: hs
              - " {{ state_attr(main_light, 'hs_color')[0] - 18 >= 0 }} "
              sequence:
              - service: light.turn_on
                target: !input target_light
                data:
                  hs_color:
                    - " {{ (state_attr(main_light, 'hs_color')[0] - 18) | int }} "
                    - 100
                  transition: 1
# - HS-Modus -> Weißton-Modus
            - conditions:
              - condition: state
                entity_id: !input main_light
                attribute: color_mode
                value: hs
              - " {{ state_attr(main_light, 'hs_color')[0] - 18 < 0 }} "
              sequence:
              - service: light.turn_on
                target: !input target_light
                data:
                  color_temp: " {{ state_attr(main_light, 'max_mireds') | int }} "
                  transition: 1
# - Weißton-Modus -> HS-Modus
            - conditions:
              - condition: state
                entity_id: !input main_light
                attribute: color_mode
                value: color_temp
              - " {{ state_attr(main_light, 'color_temp') - 10 < state_attr(main_light, 'min_mireds') }} "
              sequence:
              - service: light.turn_on
                target: !input target_light
                data:
                  hs_color:
                    - 360
                    - 100
                  transition: 1
          - delay:
              milliseconds: 1000
# Lange nach rechts
  - conditions:
    - '{{ command == "hold" }}'
    - '{{ dataargs[0] == 3328 }}'
    sequence:
    - repeat:
        until: '{{ command == "release" }}'
        sequence:
          - choose:
            - conditions:
# - Weißton-Modus: wärmer
              - condition: state
                entity_id: !input main_light
                attribute: color_mode
                value: color_temp
              - " {{ state_attr(main_light, 'color_temp') + 10 <= state_attr(main_light, 'max_mireds') }} "
              sequence:
              - service: light.turn_on
                target: !input target_light
                data:
                  color_temp: " {{ (state_attr(main_light, 'color_temp') + 10) | int }} "
                  transition: 1
# - HS-Modus: kurzwelliger
            - conditions:
              - condition: state
                entity_id: !input main_light
                attribute: color_mode
                value: hs
              - " {{ state_attr(main_light, 'hs_color')[0] + 18 <= 360 }} "
              sequence:
              - service: light.turn_on
                target: !input target_light
                data:
                  hs_color:
                    - " {{ (state_attr(main_light, 'hs_color')[0] + 18) | int }} "
                    - 100
                  transition: 1
# - HS-Modus -> Weißton-Modus
            - conditions:
              - condition: state
                entity_id: !input main_light
                attribute: color_mode
                value: hs
              - " {{ state_attr(main_light, 'hs_color')[0] + 18 > 360 }} "
              sequence:
              - service: light.turn_on
                target: !input target_light
                data:
                  color_temp: " {{ state_attr(main_light, 'min_mireds') | int }} "
                  transition: 1
# - Weißton-Modus -> HS-Modus
            - conditions:
              - condition: state
                entity_id: !input main_light
                attribute: color_mode
                value: color_temp
              - " {{ state_attr(main_light, 'color_temp') + 10 > state_attr(main_light, 'max_mireds') }} "
              sequence:
              - service: light.turn_on
                target: !input target_light
                data:
                  hs_color:
                    - 0
                    - 100
                  transition: 1
          - delay:
              milliseconds: 1000
mode: restart
max_exceeded: silent
