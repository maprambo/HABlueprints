blueprint:
  name: Ikea Styrbar Dimmer and Actions
  description: Control your lights with the IKEA STYRBAR remote. You can also set
    actions for the left and right button as well as for the up/dim up button.
  domain: automation
  input:
    remote:
      name: Remote
      description: IKEA Styrbar remote to use
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          entity:
            domain: sensor
    target_light:
      name: Lights
      description: The lights you want to control with the remote
      selector:
        target:
          entity:
            domain: light
    main_light:
      name: Main Light
      description: Main light entity used to check whether light is on
      selector:
        entity:
          domain: light
    button_left:
      name: Left button
      description: Action to run on left button press short
      default: []
      selector:
        action: {}
    button_right:
      name: Right button
      description: Action to run on right button press short
      default: []
      selector:
        action: {}
    button_up:
      name: On button
      description: Action to run on up button press short
      default: []
      selector:
        action: {}
    force_default:
      name: Force Default Action
      description: Force the above set action when turning on?
      default: false
      selector:
        boolean: {}
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'on'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'off'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'move'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'stop'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'move_with_on_off'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'stop_with_on_off'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'release'
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
    command: 'hold'
action:
- variables:
    command: '{{ trigger.event.data.command }}'
    dataargs: '{{ trigger.event.data.args }}'
- choose:
  - conditions: '{{ command == "on" }}'
    sequence:
    - choose:
      - conditions:
        - condition: state
          entity_id: !input 'main_light'
          state: 'on'
        sequence:
        - delay:
            milliseconds: 900
    - choose:
      - conditions:
        - condition: or
          conditions:
          - condition: state
            entity_id: !input 'main_light'
            state: 'on'
          - condition: and
            conditions: '{{ force_default }}'
        sequence: !input 'button_up'
      default:
      - service: light.turn_on
        target: !input 'target_light'
        data:
          transition: 1
  - conditions: '{{ command == "off" }}'
    sequence:
    - service: light.turn_off
      target: !input 'target_light'
  - conditions: '{{ command == "move" }}'
    sequence:
    - repeat:
        until: '{{ command == "stop_with_on_off" }}'
        sequence:
        - service: light.turn_on
          target: !input 'main_light'
          data:
            transition: 1
            brightness_step_pct: -10
        - delay: '1'
  - conditions: '{{ command == "move_with_on_off" }}'
    sequence:
    - repeat:
        until: '{{ command == "stop_with_on_off" }}'
        sequence:
        - service: light.turn_on
          target: !input 'target_light'
          data:
            transition: 1
            brightness_step_pct: +10
        - delay: '1'
  - conditions:
    - '{{ command == "press" }}'
    - '{{ dataargs[0] == 257 }}'
    sequence: !input 'button_left'
  - conditions:
    - '{{ command == "press" }}'
    - '{{ dataargs[0] == 256 }}'
    sequence: !input 'button_right'
  - conditions:
    - '{{ command == "hold" }}'
    - '{{ dataargs[0] == 3329 }}'
    sequence:
    - repeat:
        until: '{{ command == "release" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light
            data:
              hs_color:
                - >-
                  {% if state_attr(main_light, "hs_color")[0] - 18 < 0 %}
                    {{ (state_attr(main_light, "hs_color")[0] - 18 + 360) | int }}
                  {% else %}
                    {{ (state_attr(main_light, "hs_color")[0] - 18) | int}}
                  {% endif %}
                - 100
              transition: 1
          - delay:
              milliseconds: 1000
  - conditions:
    - '{{ command == "hold" }}'
    - '{{ dataargs[0] == 3328 }}'
    sequence:
    - repeat:
        until: '{{ command == "release" }}'
        sequence:
          - service: light.turn_on
            target: !input target_light
            data:
              hs_color:
                - >-
                  {% if state_attr(main_light, "hs_color")[0] + 18 > 360 %}
                    {{ (state_attr(main_light, "hs_color")[0] + 18 - 360) | int }}
                  {% else %}
                    {{ (state_attr(main_light, "hs_color")[0] + 18) | int }}
                  {% endif %}
                - 100
              transition: 1
          - delay:
              milliseconds: 1000
mode: restart
max_exceeded: silent
